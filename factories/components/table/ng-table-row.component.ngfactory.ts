/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from '../../../components/table/ng-table-row.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/linker/component_factory_resolver';
import * as import9 from '@angular/core/src/linker/compiler';
import * as import10 from '@angular/core/src/metadata/view';
import * as import11 from '@angular/core/src/linker/component_factory';
import * as import12 from '@angular/core/src/linker/query_list';
var renderType_NgTableRowComponent_Host:import0.RenderComponentType = (null as any);
class _View_NgTableRowComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _NgTableRowComponent_0_4:import3.NgTableRowComponent;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_NgTableRowComponent_Host0,renderType_NgTableRowComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('ng-table-row',rootSelector,(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_NgTableRowComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._NgTableRowComponent_0_4 = new import3.NgTableRowComponent(this.parentInjector.get(import8.ComponentFactoryResolver),this.parentInjector.get(import9.Compiler),compView_0.ref);
    this._appEl_0.initComponent(this._NgTableRowComponent_0_4,[],compView_0);
    compView_0.create(this._NgTableRowComponent_0_4,this.projectableNodes,(null as any));
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.NgTableRowComponent) && (0 === requestNodeIndex))) { return this._NgTableRowComponent_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._NgTableRowComponent_0_4.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this._NgTableRowComponent_0_4.ngOnDestroy();
  }
}
function viewFactory_NgTableRowComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_NgTableRowComponent_Host === (null as any))) { (renderType_NgTableRowComponent_Host = viewUtils.createRenderComponentType('',0,import10.ViewEncapsulation.None,[],{})); }
  return new _View_NgTableRowComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const NgTableRowComponentNgFactory:import11.ComponentFactory<import3.NgTableRowComponent> = new import11.ComponentFactory<import3.NgTableRowComponent>('ng-table-row',viewFactory_NgTableRowComponent_Host0,import3.NgTableRowComponent);
const styles_NgTableRowComponent:any[] = [];
var renderType_NgTableRowComponent:import0.RenderComponentType = (null as any);
class _View_NgTableRowComponent0 extends import1.AppView<import3.NgTableRowComponent> {
  _viewQuery_rowTarget_0:import12.QueryList<any>;
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_NgTableRowComponent0,renderType_NgTableRowComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._viewQuery_rowTarget_0 = new import12.QueryList<any>();
    this._el_0 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    this._viewQuery_rowTarget_0.reset([this._appEl_0.vcRef]);
    this.context.rowTarget = this._viewQuery_rowTarget_0.first;
    this.init([],[this._el_0],[],[]);
    return (null as any);
  }
}
export function viewFactory_NgTableRowComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.NgTableRowComponent> {
  if ((renderType_NgTableRowComponent === (null as any))) { (renderType_NgTableRowComponent = viewUtils.createRenderComponentType('C:/Users/Austin/webdev/ng2-expanding-table/components/table/ng-table-row.component.ts class NgTableRowComponent - inline template',0,import10.ViewEncapsulation.None,styles_NgTableRowComponent,{})); }
  return new _View_NgTableRowComponent0(viewUtils,parentInjector,declarationEl);
}